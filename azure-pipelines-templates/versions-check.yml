# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

steps:

  - task: DotNetCoreCLI@2  
    displayName: Install nanovc tool
    condition: >-
      and(
        succeeded(),
        eq(variables['StartReleaseCandidate'], false),
        not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
      )
    inputs:
      command: custom
      custom: tool
      arguments: install -g nanovc

  - task: PowerShell@2
    condition: >-
      and(
        succeeded(),
        eq(variables['StartReleaseCandidate'], false),
        not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
      )
    displayName: Prep VersionCop
    name: PrepVersionCop
    inputs:
      targetType: 'inline'
      script: |

        if($null -eq "$(solution)")
        {
            $SolutionToCheck = $env:SOLUTION_TO_CHECK
        }
        else
        {
            $SolutionToCheck = "$(solution)"
        }

        echo "##vso[task.setvariable variable=SolutionToCheck;isOutput=true]$SolutionToCheck" 

  - task: PowerShell@2
    displayName: 'Check versions match'
    condition: >-
      and(
        succeeded(),
        eq(variables['StartReleaseCandidate'], false),
        not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
      )
    inputs:
      targetType: 'inline'
      script: |

        if($null -ne $env:System_PullRequest_PullRequestId)
        {
            # this is a PR build, perform analysis on nuspec dependencies
            nanovc --working-directory $(System.DefaultWorkingDirectory) --solution-to-check $(PrepVersionCop.SolutionToCheck) --analyse-nuspec
        }
        else
        {
            nanovc --working-directory $(System.DefaultWorkingDirectory) --solution-to-check $(PrepVersionCop.SolutionToCheck)
        }
