# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

steps:
- task: PowerShell@2
  displayName: Update UnitsNet
  condition: >-
    and(
      eq(variables['StartReleaseCandidate'], 'false'),
      or(
        contains(variables['GetCommitDetails.COMMIT_MESSAGE'], '***UPDATE_DEPENDENTS***'),
        eq(variables['UPDATE_DEPENDENTS'], 'true'),
        startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
      )
    )
  env:
    GITHUB_TOKEN: $(GitHubToken)
  inputs:
    targetType: 'inline'
    script: |

      "" | Write-Host
      "**************************" | Write-Host
      "Firing update for UnitsNet" | Write-Host
      "" | Write-Host

      # working directory is UnitsNet clone
      Write-Debug "cd to $env:Agent_BuildDirectory/s/unitsnet"
      cd "$env:Agent_BuildDirectory/s/unitsnet" > $null

      # compute authorization header in format "AUTHORIZATION: basic 'encoded token'"
      # 'encoded token' is the Base64 of the string "nfbot:personal-token"
      $auth = "basic $([System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("nfbot:$env:GITHUB_TOKEN")))"

      git config --global gc.auto 0
      git config --global user.email nanoframework@outlook.com
      git config --global user.name nfbot

      # new branch name
      $newBranch = "nfbot/nano-update/"+[guid]::NewGuid().ToString()

      # set myorigin to avoid issues with git push
      git remote add myorigin https://github.com/nfbot/UnitsNet

      # create branch to perform updates
      git checkout -b $newBranch

      # install nuget to tools folder
      $nugetPath = "$env:Agent_BuildDirectory/s/unitsnet/.tools/"
      mkdir $nugetPath
      $nugetPath = "$nugetPath/nuget.exe"
      Invoke-WebRequest -Uri https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile $nugetPath
      Write-Host -Foreground Green "Downloaded NuGet.exe: $nugetPath"

      nuget restore UnitsNet.NanoFramework/GeneratedCode/UnitsNet.NanoFramework.sln

      cd CodeGen > $null

      dotnet run --update-nano-framework-dependencies --verbose

      # check if anything was changed
      $repoStatus = "$(git status --short --porcelain)"

      if ($repoStatus -ne "")
      {
        "Commit changes..." | Write-Host -ForegroundColor White

        # commit changed files
        git add -A 2>&1
        git commit -m "Update .NET nanoFramework NuGets" -m "Automated update" > $null

        # push to nfbot repo
        git -c http.extraheader="AUTHORIZATION: $auth" push --set-upstream myorigin $newBranch

        "Pushing changes to GitHub..." | Write-Host -ForegroundColor White
        git push origin $newBranch

        # submit PR
        "Creating PR..." | Write-Host -ForegroundColor White
        gh pr create --title "Update .NET nanoFramework NuGets" --body "Automated update from @nfbot." --base master --head nfbot:$newBranch
      }
